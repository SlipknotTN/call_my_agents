{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Ultralytics Segmentation people",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/ultralytics_models.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--image_path",
                "data/people_walking.png",
                "--model_path",
                "yolo11s-seg.pt",
                "--show_pred",
                "--output_path",
                "data/out_people_walking_ultra/bbox+mask.jpg",
                "--output_viz_format",
                "ultralytics"
            ]
        },
        {
            "name": "Ultralytics Segmentation people viz cv2",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/ultralytics_models.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--image_path",
                "data/people_walking.png",
                "--model_path",
                "yolo11s-seg.pt",
                "--output_path",
                "data/out_people_walking_ultra/bbox+mask_cv2.jpg",
                "--output_viz_format",
                "custom"
            ]
        },
        {
            "name": "Ultralytics Segmentation Cat viz cv2",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/ultralytics_models.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--image_path",
                "data/cat.jpg",
                "--model_path",
                "yolo11s-seg.pt",
                "--output_path",
                "data/out_cat_ultra/bbox+mask_cv2.jpg",
                "--output_viz_format",
                "custom"
            ]
        },
        {
            "name": "Ultralytics Poses people",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/ultralytics_models.py",
            "console": "integratedTerminal",
            "args": [
                "--image_path",
                "data/people_walking.png",
                "--model_path",
                "yolo11s-pose.pt",
                "--show_pred",
                "--output_path",
                "data/out_people_walking_ultra/pose.jpg"
            ]
        },
        {
            "name": "Ultralytics Poses people viz cv2",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/ultralytics_models.py",
            "console": "integratedTerminal",
            "args": [
                "--image_path",
                "data/people_walking.png",
                "--model_path",
                "yolo11s-pose.pt",
                "--output_path",
                "data/out_people_walking_ultra/pose_cv2.jpg",
                "--output_viz_format",
                "custom"
            ]
        },
        {
            "name": "Ultralytics YOLOE Segmentation cat text prompt viz cv2",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/ultralytics_models.py",
            "console": "integratedTerminal",
            "args": [
                "--image_path",
                "data/cat.jpg",
                "--model_path",
                "yoloe-11s-seg.pt",
                "--text_classes",
                "cat",
                "--output_path",
                "data/out_cat_ultra_text/bbox+mask_cv2.jpg",
                "--output_viz_format",
                "custom"
            ]
        },

        {
            "name": "Depth model Distill any depth",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/depth_model.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--image_path",
                "data/cat.jpg",
                "--hf_model_url",
                "xingyang1/Distill-Any-Depth-Small-hf",
                "--model_family",
                "distill",
                "--output_dir",
                "data/out_cat_depth_distill"
            ]
        },
        {
            "name": "Depth model DepthPro",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/depth_model.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--image_path",
                "data/cat.jpg",
                "--hf_model_url",
                "apple/DepthPro-hf",
                "--device",
                "cuda",
                "--model_family",
                "depthpro",
                "--output_mode",
                "range",
                "--min_value",
                "0.0",
                "--max_value",
                "10.0",
                "--output_dir",
                "data/out_cat_depth_pro"
            ]
        },
        {
            "name": "Langchain Agent",
            "type": "debugpy",
            "request": "launch",
            "program": "langchain_agent.py",
            "console": "integratedTerminal",
            "args": [
                "--text_prompt",
                "What is the capital of France?",
                "--llm_model",
                "qwen2.5-coder",
                "--default_sam2_model",
                "facebook/sam2-hiera-large"
            ]
        },
        {
            "name": "Langchain Agent count poses",
            "type": "debugpy",
            "request": "launch",
            "program": "langchain_agent.py",
            "console": "integratedTerminal",
            "args": [
                "--text_prompt",
                "How many persons are in the image /home/michele/DNN/call_my_agents/data/people_walking.png? Write the python code to answer this question using the functions provided",
                "--llm_model",
                "qwen2.5-coder",
                "--default_sam2_model",
                "facebook/sam2-hiera-large"
            ]
        },
        {
            "name": "Vanilla Agent code generation count poses",
            "type": "debugpy",
            "request": "launch",
            "program": "ollama_vanilla_agent.py",
            "console": "integratedTerminal",
            "args": [
                "--question",
                "How many persons are in the image /home/michele/DNN/call_my_agents/data/people_walking.png? Write the python code to answer this question using the functions provided",
                "--tools_source_files",
                "tools/ultralytics_models.py",
                "--llm_model",
                "qwen2.5-coder:3b",
            ]
        },
        {
            "name": "Langgraph Codeact Agent count poses",
            "type": "debugpy",
            "request": "launch",
            "program": "langgraph_codeact_agent.py",
            "console": "integratedTerminal",
            "args": [
                "--text_prompt",
                "How many persons are in the image /home/michele/DNN/call_my_agents/data/people_walking.png? Write the python code to answer this question using the functions provided",
                "--llm_model",
                "qwen2.5-coder:3b",
                "--default_sam2_model",
                "facebook/sam2-hiera-large"
            ]
        },
        {
            "name": "SAM video",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/sam2_model.py",
            "console": "integratedTerminal",
            "args": [
                "--video_path",
                "data/people_walking_2.mp4",
                "--output_dir",
                "data/out_people_walking_2_sam",
                "--max_frames",
                "100",
            ]
        },
        {
            "name": "SAM image",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/sam2_model.py",
            "console": "internalConsole",
            "args": [
                "--image_path",
                "data/cat.jpg",
                "--output_dir",
                "data/out_cat_sam",
                "--show_with_mpl"
            ]
        }
    ]
}